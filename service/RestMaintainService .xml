<!--<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="$LOCAL_SCHEMA$"-->
<!--       xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-3.xsd">-->


<!-- Service for Updating Party and Related ContactMech -->

<service>
    <service verb="update" noun="PartyAndRelated">

        <in-parameters>
            <parameter name="partyId" required="true" />
            <parameter name="partyType" />
            <parameter name="firstName" />
            <parameter name="lastName" />
        </in-parameters>
        <actions>
            <where value-field="" entity-name="Party">
                <set field="partyType" from="partyType" />
                <set field="firstName" from="firstName" />
                <set field="lastName" from="lastName" />
                <where field="partyId" from="partyId" /></where>

            </actions>
            <entity-find entity-name="ContactMech" list="contactList">
                <econdition field="partyId" from="partyId" />
            </entity-find>
            <foreach list="contactList" entry="contact">
                <entity-update value-field="" entity-name="ContactMech">
                    <set field="state" value="Updated State" />
                    <where field="contactMechId" from="contact.contactMechId" />
                </entity-update>
            </foreach>
        </service>


    <!-- Service for Updating OrderHeader and Related OrderItem -->
    <service  verb="update" noun="OrderHeaderAndItems">
        <in-parameters>
            <parameter name="orderId" required="true" />
            <parameter name="orderDate" />
            <parameter name="status" />
        </in-parameters>
        <actions>
            <entity-update value-field="" entity-name="OrderHeader">
                <set field="orderDate" from="orderDate" />
                <set field="status" from="status" />
                <where field="orderId" from="orderId" />
            </entity-update>
            <entity-find entity-name="OrderItem" list="orderItems">
                <econdition field="orderId" from="orderId" />
            </entity-find>
            <foreach list="orderItems" entry="item">
                <entity-update value-field="" entity-name="OrderItem">
                    <set field="status" value="Updated Status" />
                    <where field="orderItemSeqId" from="item.orderItemSeqId" />
                </entity-update>
            </foreach>
        </actions>
    </service>



    <!-- Service for Updating ContactMech Independently -->
    <service  verb="update" noun="ContactMech">
        <in-parameters>
            <parameter name="contactMechId" required="true" />
            <parameter name="streetAddress" />
            <parameter name="city" />
            <parameter name="state" />
            <parameter name="postalCode" />
        </in-parameters>
        <actions>
            <entity-update value-field="" entity-name="ContactMech">
                <set field="streetAddress" from="streetAddress" />
                <set field="city" from="city" />
                <set field="state" from="state" />
                <set field="postalCode" from="postalCode" />
                <where field="contactMechId" from="contactMechId" />
            </entity-update>
        </actions>
    </service>

    <!-- Service for Creating a Party and Related Entities -->
    <service verb="create" noun="PartyAndRelated">
        <in-parameters>
            <parameter name="partyType" />
            <parameter name="firstName" />
            <parameter name="lastName" />
        </in-parameters>
        <actions>
            <entity-create value-field="" entity-name="Party">
                <set field="partyType" from="partyType" />
                <set field="firstName" from="firstName" />
                <set field="lastName" from="lastName" />
            </entity-create>
        </actions>
    </service>

    <!-- Service for Getting All Parties -->
    <service  verb="read" noun="AllParties">
        <actions>
            <entity-find entity-name="Party" list="partyList" />
        </actions>
    </service>

    <!-- Service for Getting a Party by ID -->
    <service name="find#PartyById" verb="read" noun="Party">
        <in-parameters>
            <parameter name="partyId" required="true" />
        </in-parameters>
        <actions>
            <entity-find-one entity-name="Party" value="party">
                <econdition field="partyId" from="partyId" />
            </entity-find-one>
        </actions>
    </service>

    <!-- Service for Deleting a Party and Related Entities -->
    <service  verb="delete" noun="PartyAndRelated">
        <in-parameters>
            <parameter name="partyId" required="true" />
        </in-parameters>
        <actions>
            <entity-delete entity-name="ContactMech">
                <where field="partyId" from="partyId" />
            </entity-delete>
            <entity-delete entity-name="Party">
                <where field="partyId" from="partyId" />
            </entity-delete>
        </actions>
    </service>

    <!-- Service for Creating a Contact Mechanism -->
    <service  verb="create" noun="ContactMech">
        <in-parameters>
            <parameter name="partyId" required="true" />
            <parameter name="streetAddress" />
            <parameter name="city" />
            <parameter name="state" />
            <parameter name="postalCode" />
        </in-parameters>
        <actions>
            <entity-create value-field="" entity-name="ContactMech">
                <set field="partyId" from="partyId" />
                <set field="streetAddress" from="streetAddress" />
                <set field="city" from="city" />
                <set field="state" from="state" />
                <set field="postalCode" from="postalCode" />
            </entity-create>
        </actions>
    </service>

    <!-- Service for Getting a Contact Mechanism by ID -->
    <service  verb="read" noun="ContactMech">
        <in-parameters>
            <parameter name="contactMechId" required="true" />
        </in-parameters>
        <actions>
            <entity-find-one value-field="" entity-name="ContactMech" value="contact">
                <econdition field="contactMechId" from="contactMechId" />
            </entity-find-one>
        </actions>
    </service>

    <!-- Service for Deleting a Contact Mechanism -->
    <service  verb="delete" noun="ContactMech">
        <in-parameters>
            <parameter name="contactMechId" required="true" />
        </in-parameters>
        <actions>
            <entity-delete value-field="" entity-name="ContactMech">
                <where field="contactMechId" from="contactMechId" />
            </entity-delete>
        </actions>
    </service>

    <!-- Service for Creating a Product -->
    <service  verb="create" noun="Product">
        <in-parameters>
            <parameter name="productName" required="true" />
            <parameter name="color" />
            <parameter name="size" />
        </in-parameters>
        <actions>
            <entity-create value-field="" entity-name="Product">
                <set field="productName" from="productName" />
                <set field="color" from="color" />
                <set field="size" from="size" />
            </entity-create>
        </actions>
    </service>

    <!-- Service for Getting a Product by ID -->
    <service  verb="read" noun="Product">
        <in-parameters>
            <parameter name="productId" required="true" />
        </in-parameters>
        <actions>
            <entity-find-one entity-name="Product" value="product">
                <econdition field="productId" from="productId" />
            </entity-find-one>
        </actions>
    </service>


    <!-- Service for Creating an Order Header and Items -->
    <service  verb="create" noun="OrderHeaderAndItems">
        <in-parameters>
            <parameter name="orderDate" required="true" />
            <parameter name="status" />
            <parameter name="orderItems" type="list" />
        </in-parameters>
        <actions>
            <entity-create value-field="" entity-name="OrderHeader">
                <set field="orderDate" from="orderDate" />
                <set field="status" from="status" />
            </entity-create>
            <foreach list="orderItems" entry="item">
                <entity-create value-field="" entity-name="OrderItem">
                    <set field="orderId" from="orderHeader.orderId" />
                    <set field="productId" from="item.productId" />
                    <set field="quantity" from="item.quantity" />
                    <set field="price" from="item.price" />
                </entity-create>
            </foreach>
        </actions>
    </service>

    <!-- Service for Getting an Order Header by ID -->
    <service  verb="read" noun="OrderHeader">
        <in-parameters>
            <parameter name="orderId" required="true" />
        </in-parameters>
        <actions>
            <entity-find-one value-field="" entity-name="OrderHeader" value="orderHeader">
                <econdition field="orderId" from="orderId" />
            </entity-find-one>
        </actions>
    </service>


<service  verb="delete" noun="OrderHeaderAndItems">
    <in-parameters>
        <parameter name="orderId" required="true" />
    </in-parameters>
    <actions>
        <entity-delete value-field="" entity-name="OrderItem">
            <where field="orderId" from="orderId" />
        </entity-delete>
        <entity-delete value-field="" entity-name="OrderHeader">
            <where field="orderId" from="orderId" />
        </entity-delete>
    </actions>
</service>


    <service  verb="delete" noun="Product">
        <in-parameters>
            <parameter name="productId" required="true" />
        </in-parameters>
        <actions>
            <!-- Delete any related entities if necessary -->
            <entity-find entity-name="OrderItem" list="orderItems">
                <econdition field="productId" from="productId" />
            </entity-find>
            <foreach list="orderItems" entry="orderItem">
                <entity-delete value-field="" entity-name="OrderItem">
                    <where field="orderItemSeqId" from="orderItem.orderItemSeqId" />
                </entity-delete>
            </foreach>

            <!-- Delete the Product -->
            <entity-delete value-field="" entity-name="Product">
                <where field="productId" from="productId" />
            </entity-delete>
        </actions>
    </service>


    <service  verb="create" noun="OrderItem">
        <in-parameters>

            <parameter name="orderId" required="true" />
            <parameter name="orderItemSeqId" required="true" />
            <parameter name="productId" required="true" />
            <parameter name="quantity" required="true" />
            <parameter name="unitPrice" required="true" />
            <parameter name="status" />
        </in-parameters>
        <actions>
            <entity-create value-field="" entity-name="OrderItem">
                <set field="orderId" from="orderId" />
                <set field="orderItemSeqId" from="orderItemSeqId" />
                <set field="productId" from="productId" />
                <set field="quantity" from="quantity" />
                <set field="unitPrice" from="unitPrice" />
                <set field="status" from="status" value="Created" />
            </entity-create>
        </actions>
    </service>


</service>
















